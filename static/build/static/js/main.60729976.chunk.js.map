{"version":3,"sources":["redux/selectors.ts","redux/types.ts","redux/actions.ts","styles/global.ts","router/SpecificRoute.tsx","components/global/navbar/MenuToggler.tsx","components/global/AuthCtx.tsx","styles/navbar.ts","components/global/navbar/index.tsx","styles/menu.ts","styles/menu-content.ts","types/index.ts","components/global/menu/ExtraNavlinks.tsx","helpers/localStorage.ts","components/global/menu/Content.tsx","components/global/menu/Menu.tsx","styles/errorMessage.ts","components/global/ErrorMessage.tsx","resources/assets/Eye.tsx","styles/passwordField.ts","components/global/PasswordField.tsx","styles/infoLog.ts","components/login/Info.tsx","components/login/Form.tsx","helpers/hooks.tsx","styles/loginpage.ts","components/login/index.tsx","router/index.tsx","components/index.tsx","redux/reducers/app.ts","redux/reducers/auth.ts","redux/reducers/theme.ts","redux/index.ts","utils/history.ts","index.tsx"],"names":["getAppInfo","state","app","getThemeInfo","theme","getAuthInfo","auth","LOGOUT","LOGIN","TOGGLE_THEME","SET_DEFAULT_THEME","SET_ERROR","SET_LOADING","OPEN_CLOSE_MENU","login","data","type","payload","logout","setError","error","setLoading","loading","setMenuOpened","opened","global","createGlobalStyle","props","darkTheme","SpecificRoute","Component","component","redirectTo","privateRoute","rest","loggedIn","useSelector","undefined","render","to","MenuToggler","menuOpened","dispatch","useDispatch","id","className","onClick","AuthCtx","history","useHistory","push","Navbar","styled","nav","Menu","div","Container","rollDown","Pages","ExtraNavLinks","getThemeLabel","output","toUpperCase","_toggleTheme","key","window","localStorage","setItem","getItem","Content","useState","setRollDown","useEffect","setTimeout","links","map","link","startsWith","trim","activeStyle","color","document","body","style","overflow","mounted","ErrorMessage","setMounted","display","setDisplay","bool","Boolean","addEventListener","e","handleKeyDown","removeEventListener","keyCode","Eye","version","xmlns","width","height","viewBox","preserveAspectRatio","transform","stroke","d","InputContainer","visible","PwField","onChange","setVisible","text","setText","input","useRef","current","length","ref","value","target","focus","Paragraph","p","opacite","Info","setOpacite","higherZIndex","setHigherZIndex","LoadingButton","Form","label","username","setUsername","password","setPassword","visibleInfo","setVisibleInfo","buttonLbl","setButtonLbl","useLoadingButton","preventDefault","fetch","method","JSON","stringify","headers","then","res","json","token","Error","catch","err","message","finally","button","isMobile","onMouseEnter","onMouseLeave","val","Main","Router","exact","path","LoginPage","App","emptyBox","setEmptyBox","storageObserver","_setDefaults","setDefaultTheme","initialState","rootReducer","combineReducers","action","store","createStore","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60729976.chunk.js","sourcesContent":["import { RootState } from './'\n\n\nexport const getAppInfo = (state: RootState) => state.app\nexport const getThemeInfo = (state: RootState) => state.theme\nexport const getAuthInfo = (state: RootState) => state.auth","export interface AppState {\n  loading: boolean\n  menuOpened: boolean\n  error?: string\n}\n\nexport interface AuthState {\n  loggedIn: boolean\n  username?: string\n}\n\nexport interface ThemeState {\n  theme: boolean\n}\n\nexport interface AuthData {\n  username: string\n}\n\nexport type Error = string | undefined\n\nexport const LOGOUT = 'LOGOUT'\nexport const LOGIN = 'LOGIN'\nexport const TOGGLE_THEME = 'TOGGLE_THEME'\nexport const SET_DEFAULT_THEME = 'SET_DEFAULT_THEME'\nexport const SET_ERROR = 'SET_ERROR'\nexport const SET_LOADING = 'SET_LOADING'\nexport const OPEN_CLOSE_MENU = 'OPEN_CLOSE_MENU'\n\nexport interface LogOut {\n  type: typeof LOGOUT\n}\n\nexport interface LogIn {\n  type: typeof LOGIN\n  payload: AuthData\n}\n\nexport interface ToggleTheme {\n  type: typeof TOGGLE_THEME\n}\n\nexport interface SetDefaultTheme {\n  type: typeof SET_DEFAULT_THEME\n  theme: boolean\n}\n\nexport interface SetError {\n  type: typeof SET_ERROR\n  error: Error\n}\n\nexport interface SetLoading {\n  type: typeof SET_LOADING\n  loading: boolean\n}\n\n\nexport interface OpenCloseMenu {\n  type: typeof OPEN_CLOSE_MENU\n  opened: boolean\n}\n\nexport type AppActionType =  SetLoading | SetError | OpenCloseMenu\nexport type ThemeActionType = ToggleTheme | SetDefaultTheme\nexport type AuthActionType = LogIn | LogOut ","import { \n  LOGIN, \n  LOGOUT, \n  TOGGLE_THEME, \n  SET_DEFAULT_THEME,\n  SET_ERROR,\n  SET_LOADING,\n  OPEN_CLOSE_MENU,\n  OpenCloseMenu,\n  Error,\n  AuthData,\n  LogIn,\n  LogOut, \n  SetDefaultTheme,\n  ToggleTheme,\n  SetError,\n  SetLoading\n} from './types'\n\n\nexport const login = (data: AuthData): LogIn => ({\n  type: LOGIN,\n  payload: data\n})\n\nexport const setDefaultTheme = (theme: boolean): SetDefaultTheme => ({\n  type: SET_DEFAULT_THEME,\n  theme\n})\n\nexport const logout = (): LogOut => ({\n  type: LOGOUT\n})\n\nexport const toggleTheme = (): ToggleTheme => ({\n  type: TOGGLE_THEME\n})\n\nexport const setError = (error: Error): SetError => ({\n  type: SET_ERROR,\n  error\n})\n\nexport const setLoading = (loading: boolean): SetLoading => ({\n  type: SET_LOADING,\n  loading\n})\n\nexport const setMenuOpened = (opened: boolean): OpenCloseMenu => ({\n  type: OPEN_CLOSE_MENU,\n  opened\n})","import { createGlobalStyle } from 'styled-components'\nimport { PropsWithTheme } from '../types/styles'\n\n\nconst global = createGlobalStyle<PropsWithTheme>`\n  ::-webkit-scrollbar { \n    display: none; \n  }\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 200;\n    \n  }\n  .no-select{\n    user-select: none; \n    -moz-user-select: none;\n    -webkit-user-drag: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n  }\n  body {\n    transition: background-color .2s;\n    overflow-x: hidden;\n    background-color: ${ props => props.darkTheme ? '#111' : '#fefefe' };\n    position: relative;\n    min-height: 100vh;\n  }\n  a{\n    text-decoration: none;\n  }\n`\n\nexport default global","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect, Route, RouteProps as Props } from 'react-router-dom'\n\nimport { getAuthInfo } from '../redux/selectors'\n\ninterface RouteProps extends Props {\n  component: any,\n  redirectTo?: string,\n  privateRoute?: boolean\n}\n\nexport const SpecificRoute: React.FC<RouteProps> = ({ \n  component: Component, \n  redirectTo,\n  privateRoute,\n  ...rest \n}) => {\n  const { loggedIn } = useSelector(getAuthInfo)\n\n  if(privateRoute === undefined) privateRoute = false\n\n  return (\n    <Route\n      render={(props) =>\n        loggedIn === privateRoute \n          ? <Component {...props} /> \n          : <Redirect to={ redirectTo ? redirectTo : '/' } />\n      }\n      {  ...rest }\n    />\n  )\n}\n\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setMenuOpened } from '../../../redux/actions'\nimport { getAppInfo } from '../../../redux/selectors'\n\n \nconst MenuToggler: React.FC = () => {\n  const { menuOpened } = useSelector(getAppInfo)\n  const dispatch = useDispatch()\n\n  return(\n    <div \n      id=\"Menu\"\n      className={ menuOpened ? 'closed' : 'opened' }\n      onClick={() => dispatch(setMenuOpened(!menuOpened))}\n    >\n      <div id=\"top\"></div>\n      <div id=\"middle\"></div>\n      <div id=\"bottom\"></div>\n    </div>\n  )\n}\n\nexport default MenuToggler","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { getAuthInfo } from '../../redux/selectors'\nimport { logout } from '../../redux/actions'\n\n\nconst AuthCtx: React.FC = () => {\n  const { loggedIn } = useSelector(getAuthInfo)\n\n  const dispatch = useDispatch()\n\n  const history = useHistory()\n\n  const _handleLogout = (): void => {\n    dispatch(logout())\n    history.push('/login')\n  }\n\n  return loggedIn\n    ? <div\n        className=\"menu-link\"\n        onClick={ _handleLogout }\n        id=\"auth-ctx\"\n      >\n        LOG OUT\n      </div>\n    : null\n}\n\nexport default AuthCtx","import styled from 'styled-components'\nimport { MenuProps } from '../types/styles' \n\n\nconst Navbar = styled.nav<MenuProps>`\n  width: 100vw;\n  transition: background-color .2s;\n  background-color: ${ props => props.darkTheme ? '#111' : '#fff' };\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n\n  #Menu{\n    width: 1.3rem;\n    margin-top: 1.25rem;\n    margin-right: .75rem;\n    padding: 1rem;\n    position: fixed;\n    right: 0; \n    top: 0;\n    z-index: 5; \n  } \n  #auth-ctx{\n    right: 4rem;\n    padding: 1rem;\n    position: fixed;\n    right: 3.05; top: 0;\n    color: ${ props => props.darkTheme ? '#eee' : '#111' };\n    font-weight: 600; \n    font-size: .85rem; \n    font-family: 'Open Sans', Arial, Helvetica, sans-serif;\n    letter-spacing: .03rem;\n    z-index: 2; \n  }\n  #Menu div{\n    width: 1.1rem;\n    height: 2px;\n    background-color: ${ props => props.darkTheme ? '#fff' : '#333' }; \n  }\n  #top, #middle, #bottom{\n    position: absolute;\n    transition: all .3s; \n  }\n  #top{\n    left: 0; top: 0;\n  }\n  #middle{\n    left: 0; top: .3rem;\n  }\n  #bottom{\n    left: 0; top: .6rem;\n  }\n  .opened > #middle{\n    opacity: 1; \n    width: 1.1rem;\n    margin-left: 0;\n  } \n  .closed > #middle{\n    opacity: 0;\n    width: 0;\n    margin-left: 50%; \n  }\n  .closed > #bottom,\n  .closed > #top{\n    top: .3rem;\n    background-color: #888;  \n  }\n  .closed > #top{\n    transform: rotate(45deg);\n  }\n  .closed > #bottom{\n    transform: rotate(-45deg);\n  }\n  @media only screen and (max-width: 1000px){\n    #auth-ctx{\n      display: none;\n    }\n  }\n`\n\nexport default Navbar","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport MenuToggler from './MenuToggler'\nimport AuthCtx from '../AuthCtx'\nimport Container from '../../../styles/navbar'\nimport { getAppInfo, getThemeInfo, getAuthInfo } from '../../../redux/selectors'\n\n\nconst Navbar: React.FC = () => {\n  const { menuOpened } = useSelector(getAppInfo)\n  const { theme } = useSelector(getThemeInfo)\n  const { loggedIn } = useSelector(getAuthInfo)\n\n  return(\n    <Container\n      darkTheme={ theme }\n      opened={ menuOpened }\n    >\n      <AuthCtx/>\n      { loggedIn && <MenuToggler/> }\n    </Container>\n  )\n}\n\nexport default Navbar","import styled from 'styled-components'\nimport { MenuProps } from '../types/styles'\n\n\nconst Menu = styled.div<MenuProps>`\n  #tab{\n    height: 100vh;\n    width: 312px;\n    max-width: 85%;\n    position: fixed;\n    transition: right .5s;\n    top: 0;\n    right: ${ props => props.opened ? '0' : '-320px' };\n    background-color: ${ props => props.darkTheme ? '#111' : '#fff' };\n    z-index: 3;\n  }\n  \n  #shadow{\n    height: 100vh;\n    width: 100vw;\n    position: fixed;\n    top: 0;\n    backdrop-filter: blur(${ props => props.opened ? '25px' : '10px' });\n    left: ${ props => props.opened ? '0' : '-100vw' };\n    z-index: 2;\n  }\n`\n\nexport default Menu","import styled from 'styled-components'\nimport { PropsWithTheme } from '../types/styles'\n\ninterface MenuContentPops extends PropsWithTheme{\n  rollDown: boolean\n} \n\nconst Container = styled.div<MenuContentPops>`\n  position: relative;\n  margin-top: 2rem;\n  height: calc(100vh - 3.5rem);\n  width: 100%;\n  padding: 1rem;\n  overflow: hidden;\n\n  #inner-container{\n    position: absolute;\n    margin: 0 .5rem;\n    height: calc(100% - 1rem); width: calc(100% - 1rem);\n    left: 0; top: ${ props => props.rollDown ? '0' : '-100rem' };\n    transition: top .5s ease-out;\n    overflow-y: auto;\n  }\n  .menu-link{\n    display: block;\n    padding: 1.19rem .8rem;\n    margin: 0 .9rem;\n    color: ${ props => props.darkTheme ? '#eee' : '#111' };\n    font-weight: 500;\n    font-size: .85rem;\n    letter-spacing: .03rem;\n    font-family: 'Open Sans', Arial, Helvetica, sans-serif;\n    border-bottom: solid 1px ${ props => props.darkTheme ? 'rgba(222,222,222,0.25)' : 'rgba(0,0,0,0.25)' };\n  }\n  #auth-ctx{\n    display: none;\n  }\n  @media only screen and (max-width: 1000px){\n    #auth-ctx{\n      display: block;\n    }\n  }\n`\n\nexport default Container","\nexport const Pages = ['content', 'pictures']\n\ninterface Section {\n  sectionName: string\n  title?: string\n}\n\ninterface SectionWithImage extends Section {\n  bgImage?: string\n}\n\ninterface SectionWithResizableImage extends SectionWithImage {\n  bgImageWidth?: number\n  bgImageHeight?: number\n}\n\ninterface Argument{\n  bold?: boolean\n  statement: string\n}\n\nexport interface SubSection extends SectionWithResizableImage{\n  text?: string\n  _arguments: Argument[]\n}\n\nexport interface VideoContent{\n  url: string\n  description: string\n}\n\nexport interface PdfFile extends SectionWithResizableImage {\n  url: string\n  description: string\n}\n\nexport interface Introduction extends SectionWithImage {\n  text: string\n  videos?: VideoContent[]\n}\n\nexport interface Info extends SectionWithImage {\n  summary: string\n  pdfFile?: PdfFile\n  subSections?: SubSection[]\n}\n\nexport interface HowProduced extends SectionWithResizableImage {\n  text: string\n}\n\nexport interface Link {\n  _name: string \n  url: string\n}\n\nexport interface Sellers extends SectionWithResizableImage {\n  sellers: Link[]\n}\n\nexport interface OtherSources extends Section {\n  urls: Link[]\n}\n\nexport interface Page {\n  introduction: Introduction\n  info: Info\n  howProduced?: HowProduced\n  sellers: Sellers\n  otherSources?: OtherSources\n}\n\nexport interface Content {\n  pages: {\n    silver: Page\n    platinum: Page\n    gold: Page\n    copper: Page\n  } \n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getThemeInfo } from '../../../redux/selectors'\nimport { toggleTheme } from '../../../redux/actions'\nimport { NavLinkCtx } from './types'\nimport { toggleSmth } from '../../../helpers/localStorage'\nimport AuthCtx from '../AuthCtx'\n\n\nconst ExtraNavLinks: React.FC = () => {\n  const { theme } = useSelector(getThemeInfo)\n\n  const dispatch = useDispatch()\n\n  const getThemeLabel = (): string => {\n    let output = ''\n    theme\n      ? output += 'bright'\n      : output += 'dark'\n    output += ' '\n    return output.toUpperCase()\n  }\n\n  const _toggleTheme = (): void => {\n    dispatch(toggleTheme())\n    toggleSmth('theme')\n  }\n\n  const getThemeToggler: NavLinkCtx = () => \n    <span\n      className=\"menu-link no-select\"\n      onClick={ _toggleTheme }\n    >\n      { getThemeLabel() }\n    </span>\n  \n  return(\n    <>\n      { getThemeToggler() }\n      <AuthCtx/>\n    </>\n  )\n}\n\nexport default ExtraNavLinks","\nexport const setDefaults = (): void => {\n  window.localStorage.setItem('theme', 'false')\n}\n\nexport const toggleSmth = (key: string): void => \n  window.localStorage.setItem(\n    key,\n    window.localStorage.getItem(key) === 'true'\n      ? 'false'\n      : 'true'\n  )\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\n\nimport Container from '../../../styles/menu-content'\nimport { getAppInfo, getThemeInfo } from '../../../redux/selectors'\nimport { setMenuOpened } from '../../../redux/actions'\nimport { NavLinkGenerator } from './types'\nimport { Pages } from '../../../types/index'\nimport ExtraLinks from './ExtraNavlinks'\n\n\nconst Content: React.FC = () => {\n  const { menuOpened } = useSelector(getAppInfo)\n  const { theme } = useSelector(getThemeInfo)\n  \n  const dispatch = useDispatch()\n  \n  const [ rollDown, setRollDown ] = useState<boolean>(false) \n\n  useEffect(() => {\n    menuOpened\n      ? setTimeout(() => setRollDown(true), 150)\n      : setRollDown(false)\n  }, [ menuOpened ])\n  \n  const generateNavLinks: NavLinkGenerator = (links: string[]) => \n    <>\n      {\n        links.map(link => \n          <NavLink\n            to={ link.startsWith('/') ? link : `/${link.trim()}` }\n            className=\"menu-link\"\n            onClick={() => dispatch(setMenuOpened(false))}\n            activeStyle={{\n              color: '#888'\n            }}\n            key={ link }\n          >\n            { link.toUpperCase() }\n          </NavLink>\n        )\n      }\n    </>\n  \n  return(\n    <Container \n      rollDown={ rollDown }\n      darkTheme={ theme }\n    >\n      <div id=\"inner-container\">\n        { generateNavLinks(Pages) }\n        <ExtraLinks/>\n      </div>\n    </Container>\n  )\n}\n\nexport default Content","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getAppInfo, getThemeInfo } from '../../../redux/selectors'\nimport Container from '../../../styles/menu'\nimport Content from './Content'\n\n\nconst Menu: React.FC = () => {\n  const { menuOpened } = useSelector(getAppInfo)\n  const { theme } = useSelector(getThemeInfo)\n\n  useEffect(() => {\n    document.body.style.overflow = menuOpened ? 'hidden' : 'unset'\n  }, [ menuOpened ])\n\n  return(\n    <Container\n      opened={ menuOpened }\n      darkTheme={ theme }\n    >\n      <div id=\"tab\">\n        <Content/>\n      </div>\n      <div id=\"shadow\"></div>\n    </Container>\n  )\n}\n\nexport default Menu","import styled from 'styled-components'\nimport { PropsWithTheme } from '../types/styles'\n\ninterface Props extends PropsWithTheme{\n  mounted: boolean\n}\n\nconst Container = styled.div<Props>`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 6;\n  backdrop-filter:  ${ props => props.mounted ? 'blur(20px)' : '' };;\n\n  #inner-container{\n    width: 40%;\n    height: 50%;\n    background-color: rgba(255, 50, 50, .2);\n    transition: opacity .5s;\n    opacity: ${ props => props.mounted ? '1' : '0' };\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 1rem;\n  }\n  #close-error-log{\n    position: absolute;\n    top: .7rem; right: 0;\n    padding: 1rem;\n  }\n  #close-error-log-cross{\n    width: 25px; height: 1px;\n    background-color: #${ props => props.darkTheme ? 'eee' : '333' };\n    transform: rotateZ(45deg);\n  }\n  #close-error-log-cross::after{\n    content: \"\";\n    position: absolute;\n    width: 25px; height: 1px;\n    background-color: #${ props => props.darkTheme ? 'eee' : '333' };\n    transform: rotateZ(-90deg);\n  }\n  h5{\n    font-family: 'Noto Sans TC', Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    color: #888;\n  }\n  @media only screen and (max-width: 1000px){\n    #inner-container{\n      width: 80%;\n      height: 60%;\n    }\n  }\n`\n\nexport default Container","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setError } from '../../redux/actions'\nimport { getAppInfo, getThemeInfo } from '../../redux/selectors'\nimport Container from '../../styles/errorMessage'\nimport { DivOnClick } from '../../types/functions'\n\n\nconst ErrorMessage: React.FC = () => {\n  const dispatch = useDispatch()\n  const { error } = useSelector(getAppInfo)\n  const { theme } = useSelector(getThemeInfo)\n\n  const [ mounted, setMounted ] = useState<boolean>(false)\n  const [ display, setDisplay ] = useState<boolean>(false)\n\n  useEffect(() => {\n    const bool = Boolean(error)\n    setDisplay(bool)\n    mounted\n      ? setTimeout(() => setMounted(bool), 500)\n      : setMounted(bool)\n  }, [ error, mounted, setDisplay, setMounted ])\n\n  useEffect(() => {\n    if(error) setTimeout(() => dispatch(setError(undefined)), 5000)\n  })\n\n  useEffect(() => {\n    document.addEventListener('keydown', (e: KeyboardEvent) => handleKeyDown(e))\n    return () => {\n      document.removeEventListener('keydown', (e: KeyboardEvent) => handleKeyDown(e))\n    }\n  })\n\n  const handleKeyDown: (e: KeyboardEvent) => void = (e) => {\n    if(e.keyCode === 27) {\n      dispatch(setError(undefined))\n      setDisplay(false)\n      setTimeout(() => setMounted(false), 500)\n    }\n  }\n\n  const onClose: DivOnClick = () => \n    dispatch(setError(undefined))\n\n  return(\n    mounted \n      ? (\n          <Container\n            darkTheme={ theme }\n            mounted={ display }\n          >\n            <div id=\"inner-container\">\n              <div \n                id=\"close-error-log\"\n                onClick={ onClose }\n              >\n                <div id=\"close-error-log-cross\"></div>\n              </div>\n              <h5>{ error }</h5>\n            </div>\n          </Container>\n        )\n      : null\n  )  \n}\n\nexport default ErrorMessage","import React from 'react'\n\nimport { DivOnClick } from '../../types/functions'\n\n\nconst Eye: React.FC<{ id: string, onClick: DivOnClick }> = (props) => (\n  <div { ...props }>\n    <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24pt\" height=\"24pt\" viewBox=\"0 0 265.000000 254.000000\"\n    preserveAspectRatio=\"xMidYMid meet\">\n      <g transform=\"translate(0.000000,254.000000) scale(0.100000,-0.100000)\" stroke=\"none\">\n      <path d=\"M1090 1844 c-190 -40 -376 -148 -540 -313 -137 -137 -173 -218 -135\n      -307 35 -84 164 -221 299 -316 405 -285 856 -247 1244 107 72 65 146 159 167\n      209 38 89 2 170 -135 307 -167 167 -349 272 -546 314 -86 18 -268 18 -354 -1z\n      m352 -153 c184 -47 414 -202 513 -345 l38 -56 -28 -42 c-36 -56 -139 -155\n      -218 -211 -265 -189 -544 -219 -808 -86 -148 74 -298 196 -364 297 l-28 42 38\n      56 c97 141 327 297 509 344 98 26 249 26 348 1z\"/>\n      <path d=\"M1173 1626 c-103 -34 -176 -98 -222 -196 -22 -46 -26 -69 -26 -140 0\n      -76 4 -93 33 -152 38 -77 92 -130 171 -167 47 -22 70 -26 141 -26 71 0 94 4\n      141 26 79 37 133 90 171 167 29 59 33 76 33 152 0 71 -4 94 -26 141 -58 124\n      -169 199 -302 205 -43 3 -89 -2 -114 -10z m173 -260 c28 -28 34 -42 34 -76 0\n      -34 -6 -48 -34 -76 -28 -28 -42 -34 -76 -34 -34 0 -48 6 -76 34 -28 28 -34 42\n      -34 76 0 34 6 48 34 76 28 28 42 34 76 34 34 0 48 -6 76 -34z\"/>\n      </g>\n    </svg>\n  </div>\n)\n\nexport default Eye","import styled from 'styled-components'\nimport { PropsWithTheme } from '../types/styles'\n\ninterface props extends PropsWithTheme{\n  visible: boolean\n}\n\nconst InputContainer = styled.div<props>`\n  position: relative;\n  height: 2.8rem;\n\n  input{\n    position: absolute;\n    top: 0; left: 0;\n  } \n  #eye{\n    top: calc(50% - .95rem); right: 3rem;\n    position: absolute;\n  }\n  #eye svg{\n    height: 1.9rem; width: 1.9rem;\n  }\n  #eye g{\n    fill: ${ props => props.darkTheme ? '#eee' : '#222' };\n  } \n  #eye::after{\n    content: \"\";\n    position: absolute;\n    bottom: 53%; right: 10%;\n    width: 1.6rem;\n    transform: rotateZ(-45deg);\n    height: 2px;\n    background-color: ${ props => props.darkTheme ? '#eee' : '#222' };\n    border-radius: .1rem;\n    transition: opacity .3s;\n    opacity: ${ props => props.visible ? '1' : '0' };\n  }\n  @supports (-webkit-touch-callout: none){\n    #eye{\n      top: calc(50% - .8rem); right: 2.5rem;\n    }\n  }\n`\n\nexport default InputContainer","import React, { useRef, useState,  useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Eye from '../../resources/assets/Eye'\nimport Container from '../../styles/passwordField'\nimport { InputOnChange, DivOnClick } from '../../types/functions'\nimport { getThemeInfo } from '../../redux/selectors'\n\ninterface PwFieldProps {\n  onChange: (val: string) => void\n}\n\nconst PwField: React.FC<PwFieldProps> = ({ onChange }) => {\n  const [ visible, setVisible ] = useState<boolean>(false)\n  const [ text, setText ] = useState<string>('')\n\n  const input = useRef<HTMLInputElement>(null)\n\n  const { theme } = useSelector(getThemeInfo)\n\n  useEffect(() => {\n    if(input.current && text.length === 0) input.current.type = 'password'\n  }, [ text ])\n\n  const onChangeHandler: InputOnChange = (e) => {\n    const { value } = e.target\n    value.trim()\n    setText(value)\n    onChange(value)\n  }\n\n  const EyeOnClick: DivOnClick = () => {\n    setVisible(!visible)\n    if(input.current !== null){\n      visible\n        ? input.current.type = 'password'\n        : input.current.type = 'text'\n      input.current.focus()\n    }\n  }\n  \n  return(\n    <Container\n      visible={ visible }\n      darkTheme={ theme }\n    >\n      <input \n        ref={ input }\n        type=\"password\"\n        onChange={ onChangeHandler }\n      />\n      {text.length > 0 &&\n        <Eye \n          id=\"eye\"\n          onClick={ EyeOnClick }\n        />\n      }\n    </Container>\n  )\n}\n\nexport default PwField","import styled from 'styled-components'\nimport { InfoLogProps } from '../types/styles'\n\n\nconst Paragraph = styled.p<InfoLogProps>`\n  position: absolute;\n  left: 9%; top: calc(3.4rem + 20%);\n  width: 70%;\n  padding: 1rem;\n  background-color: #${ props => props.darkTheme ? '111' : 'fff' };\n  box-shadow: ${ props => props.darkTheme ? '0 4px 16px rgb(255 255 255 / 10%)' : '0 4px 16px rgb(0 0 0 / 10%)' };\n  line-height: 1.4rem;\n  border-radius: .5rem; \n  font-weight: 400;\n  transition: opacity .05s;\n  z-index: ${ props => props.visible ? '2' : '-1' };\n  opacity: ${ props => props.opacite ? '1' : '0' };\n  @media only screen and (max-width: 1000px){\n    top: 7.5rem;\n    left: 0;\n    width: 90%;\n  }\n  @media only screen and (max-width: 500px){\n    top: 5.5rem;\n    left: 0;\n    width: 90%;\n  }\n`\n\nexport default Paragraph","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getThemeInfo } from '../../redux/selectors'\nimport InfoLog from '../../styles/infoLog'\n\ninterface Props {\n  visible: boolean\n}\n\nconst Info: React.FC<Props> = ({ visible }) => {\n  const { theme } = useSelector(getThemeInfo)\n\n  const [ opacite, setOpacite ] = useState<boolean>(false)\n  const [ higherZIndex, setHigherZIndex ] = useState<boolean>(false)\n\n  useEffect(() => {\n    setOpacite(visible)\n    visible \n      ? setHigherZIndex(true)\n      : setTimeout(() => setHigherZIndex(false), 50)\n  }, [ visible ])\n\n  return(\n    <InfoLog\n      opacite={ opacite }\n      darkTheme={ theme }\n      visible={ higherZIndex }\n    >\n      To login for being able to edit content of this webpage, you have to enter your username, and password\n    </InfoLog>\n  )\n}\n\nexport default Info","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { isMobile } from 'react-device-detect'\n\nimport { InputOnChange, SpanMouseEvent, DivOnClick } from '../../types/functions'\nimport { setError, login, setLoading } from '../../redux/actions'\n\nimport PwField from '../global/PasswordField'\nimport Info from './Info'\n\nimport { useLoadingButton } from '../../helpers/hooks'\n\n\nconst LoadingButton: React.FC<any> = () => <div className=\"loader\"></div>\n\nconst Form: React.FC<{ label: string }> = ({ label }) => {\n  const dispatch = useDispatch()\n\n  const history = useHistory()\n \n  const [ username, setUsername ] = useState<string>('')\n  const [ password, setPassword ] = useState<string>('')\n  const [ visibleInfo, setVisibleInfo ] = useState<boolean>(false)\n  \n  const pwOnChange: (val: string) => void = (val) => setPassword(val)\n\n  const usernameOnChange: InputOnChange = (e) => setUsername(e.target.value)\n\n  const handleSubmit: DivOnClick = (e) => {\n    e.preventDefault()\n    if(username.length < 4) return dispatch(setError('Username is to short'))\n    if(password.length < 5) return dispatch(setError('Password does not seem to match'))\n    dispatch(setLoading(true))\n\n    interface ResponseJSON {\n      error?: string\n      token?: string\n    } \n\n    fetch('/auth/login', {\n      method: 'PUT',\n      body: JSON.stringify({ username, password }),\n      headers: {'content-type': 'application/json'}\n    })\n      .then(res => res.json()) \n      .then((res: ResponseJSON) => {\n        if(res.error) return dispatch(setError(res.error))\n        if(!res.token) throw Error('Token not found')\n\n        dispatch(login({ username }))\n        history.push('/')\n      })\n      .catch((err: Error) => dispatch(setError(err.message))) \n      .finally(() => dispatch(setLoading(false)))\n  }\n\n  const handleClick: SpanMouseEvent = () => {\n    if(isMobile)\n      setVisibleInfo(!visibleInfo)\n  }\n\n  const mouseEnterHandler: SpanMouseEvent = ()  => {\n    if(!isMobile)\n      setVisibleInfo(true)\n  }\n\n  const mouseLeaveHandler: SpanMouseEvent = ()  => {\n    if(!isMobile)\n      setVisibleInfo(false)\n  }\n\n  const [ button ] = useLoadingButton({ \n    component: LoadingButton, \n    label: label.toUpperCase(),\n    onClick: handleSubmit,\n    id: 'button' \n  })\n\n  return(\n    <form>\n      <p className=\"no-select\">\n        Your Username\n        <span \n          id=\"info\"\n          onClick={ handleClick }\n          onMouseEnter={ mouseEnterHandler }\n          onMouseLeave={ mouseLeaveHandler }\n        >ⓘ</span>\n      </p>\n      <Info visible={ visibleInfo }/>\n      <input \n        type=\"text\"\n        onChange={ usernameOnChange }\n      />\n      <p className=\"no-select\">Password</p>\n      <PwField\n        onChange={ pwOnChange }\n      /> \n      { button }\n    </form>\n  )\n}\n\nexport default Form","import React, { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer'\n\nimport { useSelector } from 'react-redux'\nimport { getAppInfo } from '../redux/selectors'\nimport { DivOnClick } from '../types/functions'\n\n\ninterface PropsForUseLoadingButton {\n  label: string\n  onClick: DivOnClick\n  component: React.FC\n  id: string\n}\n\nexport const useLoadingButton: (props: PropsForUseLoadingButton) => [ JSX.Element ] = ({ \n  label, onClick, component, id \n}) => {\n  const { loading } = useSelector(getAppInfo)\n  const [ buttonLbl, setButtonLbl ] = useState<string | React.FC>(label)\n\n  useEffect(() => {\n    loading \n      ? setButtonLbl(component)\n      : setButtonLbl(label)\n  }, [ loading, label, component ])\n\n  const output = (\n    <div \n      id={ id }\n      onClick={ onClick }\n      className=\"no-select\"\n    >\n      { buttonLbl }\n    </div>\n  )\n\n  return [ output ]\n}\n\ntype TransformHook = (moveX?: boolean, moveY?: boolean) => {\n  transformX: number\n  transformY: number \n  currentY: number\n  currentX: number\n  setCurrentX: React.Dispatch<React.SetStateAction<number>>\n  setCurrentY: React.Dispatch<React.SetStateAction<number>>\n}\n\nexport const useTransforms: TransformHook = (moveX, moveY) => {\n  const [ currentX, setCurrentX ] = useState<number>(0)\n  const [ currentY, setCurrentY ] = useState<number>(0)\n\n  const [ width, setWidth ] = useState<number>(window.innerWidth)\n  const [ height, setHeight ] = useState<number>(window.innerHeight)\n\n  const [ transformX, setTransformX ] = useState<number>(0)\n  const [ transformY, setTransformY ] = useState<number>(0)\n\n  type UpdateTransforms = () => void\n\n  const updateTransforms: UpdateTransforms = () => {\n    setWidth(window.innerWidth)\n    setHeight(window.innerHeight)\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', updateTransforms)\n    return () => window.removeEventListener('resize', updateTransforms)\n  })\n\n  useEffect(() => {\n    if(moveX) setTransformX(width * currentX)\n  }, [ currentX, width, moveX ])\n\n  useEffect(() => {\n    if(moveY) setTransformY(height * currentY)\n  }, [ currentY, height, moveY ])\n\n  if(!moveX && !moveY) throw new Error('Either moveX or moveY should be true')\n\n  return { transformX, transformY, currentX, currentY, setCurrentX, setCurrentY }\n}\n\ninterface GenericIdentityFn<T> {\n  (arg: T, delay: number): T;\n}\n\nexport const useDelay: GenericIdentityFn<any> = (arg, delay) => {\n  const [ newValue, setNewValue ] = useState<any>(arg)\n\n  useEffect(() => {\n    setTimeout(() => setNewValue(arg), delay)\n  }, [ arg, delay ])\n\n  return newValue\n}\n\ntype UseViewWithDelay = (delay: number) => {\n  ref: React.Ref<HTMLDivElement | any>\n  inView: boolean\n}\n\nexport const useInViewWithDelay: UseViewWithDelay = (delay) => {\n  const { ref, inView } = useInView()\n\n  const _inView = useDelay(inView, delay)\n\n  return { ref, inView: _inView }\n}","import styled from 'styled-components'\nimport { PropsWithTheme } from '../types/styles'\n \n\nconst Container = styled.div<PropsWithTheme>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  position: relative;\n\n  #content{\n    height: 70%;\n    width: 40%;\n    padding: 5%;\n    position: relative;\n  }\n  #content h1{\n    margin-bottom: .6rem;\n    font-size: 2.5rem;\n    font-family: 'Noto Sans TC', Arial, Helvetica, sans-serif;\n    color: #${ props => props.darkTheme ? 'eee' : '222' };\n  }\n  h5{\n    color: #ff5533;\n    font-size: 1rem;\n    font-weight: 500;\n  }\n  #content p{\n    margin-top: 1.5rem;\n    margin-bottom: .5rem;\n    margin-left: .9rem;\n    color: #${ props => props.darkTheme ? 'bbb' : '555' };\n    font-weight: 500;\n    letter-spacing: .03rem;\n  }\n  #content input{\n    width: 90%;\n    height: 2.8rem;\n    border: none;\n    background-color: #${ props => props.darkTheme ? '252525' : 'f5f5f5' };\n    padding: .5rem 1.3rem;\n    border-radius: 1.8rem;\n    font-size: 1.1rem;\n    transition: box-shadow .3s;\n    color: #${ props => props.darkTheme ? 'ddd' : '333' };\n  }\n  #button{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 1.8rem;\n    width: 90%;\n    height: 2.8rem;\n    border-radius: 1.8rem;\n    font-size: 1.1rem;\n    border: none;\n    background-color: #3355ee;\n    font-size: .9rem;\n    font-family: 'Noto Sans TC', Arial, Helvetica, sans-serif;\n    color: #eee;  \n    transition: background-color .5s;\n  }\n  #content input:focus{\n    outline: none;\n    box-shadow: 0 0 .1rem #888;\n  }\n  #button:focus{\n    outline: none;\n  }\n  #button:hover{\n    background-color: #3355aa;\n  }\n  #info{\n    margin-left: .5rem;\n    font-weight: 700;\n  }\n\n  .loader,\n  .loader:before,\n  .loader:after {\n    border-radius: 50%;\n    width: 1rem;\n    height: 1rem;\n    -webkit-animation-fill-mode: both;\n    animation-fill-mode: both;\n    -webkit-animation: load7 1.8s infinite ease-in-out;\n    animation: load7 1.8s infinite ease-in-out;\n  }\n  .loader {\n    color: #ffffff;\n    position: relative; \n    margin-top: -5rem;\n    -webkit-animation-delay: -0.16s;\n    animation-delay: -0.16s;\n  }\n  .loader:before,\n  .loader:after {\n    content: '';\n    position: absolute;\n    top: 0;\n  }\n  .loader:before {\n    left: -2rem;\n    -webkit-animation-delay: -0.32s;\n    animation-delay: -0.32s;\n  }\n  .loader:after {\n    left: 2rem;\n  }\n  @-webkit-keyframes load7 {\n    0%,\n    80%,\n    100% {\n      box-shadow: 0 2.5rem 0 -1.3rem;\n    }\n    40% {\n      box-shadow: 0 2.5rem 0 0;\n    }\n  }\n  @keyframes load7 {\n    0%,\n    80%,\n    100% {\n      box-shadow: 0 2.5rem 0 -1.3rem;\n    }\n    40% {\n      box-shadow: 0 2.5rem 0 0;\n    }\n  }\n\n  @media only screen and (max-width: 1000px){\n    #content{\n      width: 60%;\n    }\n  }\n  @media only screen and (max-width: 500px){\n    #content{\n      width: 80%;\n    }\n    #content h1{\n      margin-bottom: .2rem; \n      font-size: 1.7rem;\n    }\n    #content input{\n      height: 2.3rem;\n      padding: .5rem 1.3rem;\n      font-size: 1rem;\n    }\n    #content p{\n      margin-top: 1.1rem;\n      margin-bottom: .3rem;\n      margin-left: .7rem;\n    }\n    #button{\n      margin-top: 1.5rem;\n      width: 90%;\n      height: 2.5rem;\n      border-radius: 1.8rem;\n      font-size: 1rem;\n    }\n  }\n  @supports (-webkit-touch-callout: none){\n    #content input{\n      height: 3rem;\n      padding: .7rem .8rem;\n      font-size: 1rem;\n      font-weight: 500;\n    }\n    #button{\n      height: 3rem;\n    }\n  }\n`\n\nexport default Container","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getThemeInfo } from '../../redux/selectors'\nimport Form from './Form'\nimport Container from '../../styles/loginpage'\n\n\nconst Main: React.FC = () => {\n  const label = 'Sign In'\n\n  const { theme } = useSelector(getThemeInfo)\n  \n  return(\n    <Container darkTheme={ theme }>\n      <div id=\"content\">\n        <h1>{ label }</h1>\n        <Form label={ label.toUpperCase() }/>\n      </div>\n    </Container>\n  )\n}\n\nexport default Main","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom'\n\nimport { SpecificRoute } from './SpecificRoute'\n\nimport Navbar from '../components/global/navbar'\nimport Menu from '../components/global/menu/Menu'\nimport ErrorMessage from '../components/global/ErrorMessage'\nimport { getAuthInfo } from '../redux/selectors'\n\nimport LoginPage from '../components/login'\n\n\nconst Router: React.FC = () => {\n  const { loggedIn } = useSelector(getAuthInfo)\n\n  return(\n    <BrowserRouter>\n      <Navbar/>\n      <Menu/>\n      <ErrorMessage/>\n      { !loggedIn && <Redirect to=\"/login\"/> }\n      <Switch>\n        <SpecificRoute\n          exact\n          path=\"/login\"\n          component={ LoginPage }\n        />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getThemeInfo } from '../redux/selectors'\nimport { setDefaultTheme, logout, login, setError } from '../redux/actions'\nimport Global from '../styles/global'\nimport { setDefaults } from '../helpers/localStorage'\nimport Router from '../router'\nimport ErrorMessage from './global/ErrorMessage'\n\n \nconst App: React.FC = () => {\n  const { theme } = useSelector(getThemeInfo)\n  const [ emptyBox, setEmptyBox ] = useState<boolean>(true)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    window.addEventListener('storage', storageObserver)\n    return () => {\n      window.removeEventListener('storage', storageObserver)\n    }\n  })\n\n  useEffect(() => {\n    fetch('/auth/whoami')\n      .then(res => res.json())\n      .then(res => {\n        if(res.username)\n          dispatch(login({ username: res.username }))\n      })\n      .catch((err: Error) => setError(err.message))\n      .finally(() => setEmptyBox(false))\n  }, [ dispatch ])\n\n  const storageObserver = (e: StorageEvent): void => {\n    !e.key && _setDefaults()\n  }\n\n  const _setDefaults = (): void => {\n    setDefaults()\n    dispatch(setDefaultTheme(false))\n    dispatch(logout())\n  }\n\n  return (\n    <div>\n      <Global darkTheme={ theme }/>\n      <ErrorMessage/>\n      { !emptyBox && <Router/> }\n    </div>\n  )\n}\n\nexport default App","import { \n  AppActionType, \n  AppState, \n  SET_ERROR, \n  SET_LOADING,\n  OPEN_CLOSE_MENU\n} from '../types'\n\n\nconst initialState: AppState = {\n  error: undefined,\n  loading: false,\n  menuOpened: false\n}\n\nexport const appReducer = (state = initialState, action: AppActionType): AppState => {\n  switch(action.type){\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.error\n      }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.loading\n      }\n    case OPEN_CLOSE_MENU:\n      return {\n        ...state,\n        menuOpened: action.opened\n      }\n    default:\n      return state\n  }\n}","import { \n  AuthActionType, \n  AuthState, \n  LOGIN, \n  LOGOUT \n} from '../types'\n\nconst initialState: AuthState = {\n  username: undefined,\n  loggedIn: false,\n}\n\nexport const authReducer = (state = initialState, action: AuthActionType): AuthState => {\n  switch(action.type){\n    case LOGIN:\n      return {\n        ...state,\n        loggedIn: true,\n        username: action.payload.username,\n      }\n    case LOGOUT:\n      return {\n        ...state,\n        loggedIn: false,\n        username: undefined,\n      }\n    default:\n      return state\n  }\n}","import {\n  ThemeState,\n  ThemeActionType,\n  SET_DEFAULT_THEME,\n  TOGGLE_THEME\n} from '../types'\n\nconst initialState: ThemeState = {\n  theme: window.localStorage.getItem('theme') === 'true'\n}\n\nexport const themeReducer = (state = initialState, action: ThemeActionType): ThemeState => {\n  switch(action.type){\n    case SET_DEFAULT_THEME:\n      return {\n        theme: action.theme\n      }\n    case TOGGLE_THEME:\n      return {\n        theme: !state.theme\n      }\n    default:\n      return state\n  }\n}","import { combineReducers, createStore } from 'redux'\nimport { appReducer } from './reducers/app'\nimport { authReducer } from './reducers/auth'\nimport { themeReducer } from './reducers/theme'\n\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  auth: authReducer,\n  theme: themeReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer)","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router-dom'\n\nimport App from './components'\nimport { store } from './redux'\nimport history from './utils/history'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={ history }>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}